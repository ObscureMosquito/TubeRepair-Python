/*
TubeRepair - Main Class
Optimized and Organized
2024-01-06
*/

#import <objc/runtime.h>
#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>
#import "TubeRepair.h"


// Declare a global variable to store the URL
static NSString *globalURLEndpoint = nil;


void setDefaultUrl(void) {
    NSString *settingsPath = @"/var/mobile/Library/Preferences/bag.xml.tuberepairpreference.plist";
    NSDictionary *prefs = [NSDictionary dictionaryWithContentsOfFile:settingsPath];
    globalURLEndpoint = [prefs objectForKey:@"URLEndpoint"];
    if (!globalURLEndpoint) return;
    
    // Remove "http://" or "https://" from globalURLEndpoint
    NSString *configuredServiceHost = [globalURLEndpoint copy];
    if ([configuredServiceHost hasPrefix:@"http://"]) {
        configuredServiceHost = [configuredServiceHost substringFromIndex:[@"http://" length]];
    } else if ([configuredServiceHost hasPrefix:@"https://"]) {
        configuredServiceHost = [configuredServiceHost substringFromIndex:[@"https://" length]];
    }

    NSString *youtubeFrameworkPlistPath = @"/var/mobile/Library/Preferences/youtube-framework.plist";
    NSMutableDictionary *youtubeFrameworkPrefs = [NSMutableDictionary dictionaryWithContentsOfFile:youtubeFrameworkPlistPath];
    if (!youtubeFrameworkPrefs) youtubeFrameworkPrefs = [NSMutableDictionary dictionary];
    [youtubeFrameworkPrefs setObject:configuredServiceHost forKey:@"ConfiguredServiceHost"];
    [youtubeFrameworkPrefs writeToFile:youtubeFrameworkPlistPath atomically:YES];
}


%group Baseplate

%hook NSURL

+ (instancetype)URLWithString:(NSString *)URLString {
    NSString *modifiedURLString = URLString;

    if (globalURLEndpoint && [URLString rangeOfString:@"https://www.google.com"].location != NSNotFound) {
        modifiedURLString = [URLString stringByReplacingOccurrencesOfString:@"https://www.google.com" withString:globalURLEndpoint];
    }

    if (globalURLEndpoint && [URLString rangeOfString:@"https://gdata.youtube.com"].location != NSNotFound) {
        modifiedURLString = [URLString stringByReplacingOccurrencesOfString:@"https://gdata.youtube.com" withString:globalURLEndpoint];
    }

    NSURL *modifiedURL = %orig(modifiedURLString);
    return modifiedURL;
}

%end

%end


%ctor {
    NSString *systemVersion = [[UIDevice currentDevice] systemVersion];
    float version = [systemVersion floatValue];
    
    // Initialize Baseplate once
    %init(Baseplate);
    setDefaultUrl();
    
    if (version >= 5.0 && version < 11.0) {
        /*fetchYouTubeTVPageAndExtractClientID(^(BOOL success, NSString *clientID, NSString *clientSecret) {
            if (success) {
                NSLog(@"Successfully extracted client ID: %@ and secret: %@", clientID, clientSecret);
            } else {
                NSLog(@"Failed to extract client ID and secret.");
            }
        });*/
    }
}